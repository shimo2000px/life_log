<%= content_for :head do %>
<style>
/* ★ インスタグラム風いいねブロック ★ */
.likes-counter-instagram {
  position: relative;
  display: inline-block;
  margin: 10px 0;
}

.likes-block {
  background: linear-gradient(135deg, #e91e63, #f44336);
  color: white;
  padding: 8px 16px;
  border-radius: 20px;
  display: inline-flex;
  align-items: center;
  gap: 6px;
  box-shadow: 0 4px 15px rgba(233, 30, 99, 0.3);
  font-weight: 600;
  font-size: 14px;
  transition: all 0.3s ease;
  position: relative;
  min-width: 80px;
  justify-content: center;
}

.likes-block:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(233, 30, 99, 0.4);
}

.heart-icon {
  font-size: 18px;
  filter: drop-shadow(0 2px 4px rgba(0,0,0,0.1));
}

.likes-block .count {
  font-family: 'Arial', sans-serif;
  font-weight: 700;
  text-shadow: 0 1px 2px rgba(0,0,0,0.1);
  min-width: 40px;
  text-align: left;
}

.hearts-container {
  position: absolute;
  width: 1px;
  height: 1px;
  left: 50%;
  top: 50%;
  pointer-events: none;
  z-index: 1000;
}

.exploding-heart {
  position: absolute;
  pointer-events: none;
  z-index: 1001;
  text-shadow: 0 2px 4px rgba(0,0,0,0.3);
}

.likes-block.animating {
  animation: heartbeat 0.6s ease-in-out;
}

@keyframes heartbeat {
  0% { transform: scale(1); }
  25% { transform: scale(1.1); }
  50% { transform: scale(1.05); }
  75% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

@media (max-width: 768px) {
  .likes-block {
    padding: 6px 12px;
    font-size: 12px;
    min-width: 70px;
  }
  
  .heart-icon {
    font-size: 16px;
  }

  .heart-icon {
  font-size: 16px;
  filter: drop-shadow(0 2px 4px rgba(0,0,0,0.1));
  transition: all 0.3s ease; /* ★ 変化をスムーズに */
}

.heart-icon.liked {
  color: #ff3040; /* ♥の時の色 */
  transform: scale(1.1);
}
}
</style>
<% end %>

<div class="container pt-5">
  <div class="row mb-3">
    <div class="col-lg-8 offset-lg-2">
      <h1><%= @post.title %></h1>
      <div class="mb-3">
        <small class="text-muted">
          投稿者: <%= current_user.nick_name %> | 
          <%= @post.created_at.strftime("%Y年%m月%d日 %H:%M") %>
        </small>
      </div>
      
      <div class="card">
        <div class="card-body">
          <%= simple_format(@post.body) %>
        </div>
      </div>
      
      
      <!-- 擬似いいね機能 -->
      <div class="likes-counter-instagram" data-target="<%= @post.auto_likes_count %>">
        <div class="likes-block"> 
        <span class="heart-icon" data-original="♡" data-liked="♥">♡</span>
        <span class="count">0</span>
        <div class="hearts-container"></div>
      </div>

<%= content_for :javascript do %>
<script>
document.addEventListener('turbo:load', function() {
  document.querySelectorAll('.likes-counter-instagram:not(.animated)').forEach(function(element, index) {
    const counter = element.querySelector('.count');
    const heartsContainer = element.querySelector('.hearts-container');
    const likesBlock = element.querySelector('.likes-block');
    const heartIcon = element.querySelector('.heart-icon');
    const target = parseInt(element.dataset.target);
    
    if (!counter || !target || target <= 0) return;
    
    element.classList.add('animated');
    
    setTimeout(() => {
      // ★ ブロックにハートビートアニメーション追加 ★
      likesBlock.classList.add('animating');
      
      // 数字カウントアニメーション
      let current = 0;
      const increment = Math.ceil(target / 50);
      
      const timer = setInterval(() => {
        current += increment;
        if (current >= target) {
          counter.textContent = target.toLocaleString();
          clearInterval(timer);
          
          // アニメーション終了
          setTimeout(() => {
            heartIcon.textContent = heartIcon.dataset.liked;
            heartIcon.classList.add('liked');
            likesBlock.classList.remove('animating');
          }, 200);
        } else {
          counter.textContent = current.toLocaleString();
        }
      }, 30);
      
      // ★ ハート爆発アニメーション ★
      if (heartsContainer) {
        animateExplodingHearts(heartsContainer, target);
      }
    }, index * 200);
  });
});

// ★ インスタ風ハート爆発アニメーション ★
function animateExplodingHearts(container, targetCount) {
  const heartCount = Math.min(Math.floor(targetCount / 50), 15); // より多くのハート
  
  if (heartCount <= 0) return;
  
  // ハート生成
  for (let i = 0; i < heartCount; i++) {
    setTimeout(() => {
      createInstagramHeart(container, i, heartCount);
    }, i * 100);
  }
}

function createInstagramHeart(container, index, totalHearts) {
  const heart = document.createElement('span');
  const heartTypes = ['💖', '💕', '💗', '🧡', '💛', '💚', '💙', '💜', '❤️', '🤍'];
  heart.textContent = heartTypes[index % heartTypes.length];
  heart.className = 'exploding-heart';
  
  // 円形配置（より美しく分散）
  const angle = (Math.PI * 2 * index) / totalHearts + (Math.random() - 0.5) * 0.5;
  const distance = Math.random() * 100 + 80; // 80-180pxの距離
  const endX = Math.cos(angle) * distance;
  const endY = Math.sin(angle) * distance;
  
  heart.style.position = 'absolute';
  heart.style.left = '0px';
  heart.style.top = '0px';
  heart.style.transform = 'translate(-50%, -50%) scale(0) rotate(0deg)';
  heart.style.transition = 'all 2s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
  heart.style.pointerEvents = 'none';
  heart.style.zIndex = '1001';
  heart.style.fontSize = (Math.random() * 10 + 18) + 'px'; // 18-28px
  heart.style.opacity = '1';
  
  container.appendChild(heart);
  
  // ★ 美しいアニメーション開始 ★
  setTimeout(() => {
    const rotation = (Math.random() - 0.5) * 720; // ランダム回転
    heart.style.transform = `translate(calc(-50% + ${endX}px), calc(-50% + ${endY}px)) scale(1.2) rotate(${rotation}deg)`;
    heart.style.opacity = '0';
  }, 50);
  
  // 清掃
  setTimeout(() => {
    if (heart.parentNode) {
      heart.remove();
    }
  }, 2050);
}
</script>
<% end %>

      
  <!-- 詳細 -->  
  <div class="mt-4 d-flex justify-content-between align-items-center">
    <div>
      <%= link_to posts_path, class: "btn btn-outline-secondary" do %>
        <i class="bi bi-arrow-left"></i> 日記一覧に戻る
      <% end %>
    </div>
    <% if @post.user == current_user %>
      <div class="btn-group">
        <%= link_to edit_post_path(@post), class: "btn btn-outline-primary" do %>
          <i class="bi bi-pencil"></i> 編集
        <% end %>
        <%= link_to post_path(@post), 
                    data: { turbo_method: :delete, turbo_confirm: "「#{@post.title}」を本当に削除しますか？\nこの操作は取り消せません。" },
                    class: "btn btn-outline-danger" do %>
          <i class="bi bi-trash"></i> 削除
        <% end %>
      </div>
    <% end %>
  </div>

    </div>
  </div>
</div>